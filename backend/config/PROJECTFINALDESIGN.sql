
show tables;
SELECT * FROM PRODUCT;




CREATE TABLE PRODUCT(
	PRODUCT_ID bigint NOT NULL  PRIMARY KEY,
    PRODUCT_NAME VARCHAR(50) NOT NULL,
    CATEGORYID BIGINT NOT NULL ,
    DESCRIPTION VARCHAR(100) ,
    TAGS VARCHAR(100) NOT NULL,
    IMAGESOURCE BLOB NOT NULL,
    SUPPLIER_ID BIGINT NOT NULL,
    PIECES INT DEFAULT 0
);

CREATE TABLE CATEGORY (
	CATEGORY_ID BIGINT NOT NULL primary key,
    PARENT_ID BIGINT ,
    CATEGORY_DESC VARCHAR(100) ,
    IMAGE BLOB 
);

CREATE TABLE CUSTOMERS(
	CUSTOMER_ID BIGINT AUTO_INCREMENT ,
    FIRST_NAME VARCHAR(30) NOT NULL,
    LAST_NAME VARCHAR(30) NOT NULL,
    EMAIL VARCHAR(50) NOT NULL UNIQUE,
    PASSWORD VARCHAR(50) NOT NULL ,
    ADDRESS VARCHAR(100),
    PHONE_NUMBER VARCHAR(15) ,
    CREATED_AT DATE NOT NULL,
    CONSTRAINT CUSTOMER_PK PRIMARY KEY(CUSTOMER_ID)
);

CREATE TABLE SUPPLIERS (
	SUPPLIER_ID BIGINT NOT NULL PRIMARY KEY,
    NAME VARCHAR(30) NOT NULL,
    CONTACT VARCHAR(11) NOT NULL,
    ADDRESS VARCHAR(100) NOT NULL,
    CITY VARCHAR(20),
    POSTALCODE INT ,
    COUNTRY VARCHAR(20) NOT NULL
    
);
CREATE TABLE SHIPPERS (
	SHIPPER_ID BIGINT NOT NULL PRIMARY KEY,
    NAME VARCHAR(30) NOT NULL,
    CONTACT VARCHAR(11) NOT NULL,
    COUNTRY VARCHAR(20) NOT NULL
);

CREATE TABLE ADMINISTRATOR (
	EMAIL VARCHAR(30) NOT NULL PRIMARY KEY,
    PASSWORD VARCHAR(30) NOT NULL , 
    CREATED_AT DATE  NOT NULL,
    ROLE ENUM('ADMIN' , 'MANAGER' , 'ACCOUNTANT') NOT NULL
);

CREATE TABLE ORDERSTATUS(
	ORDER_ID BIGINT NOT NULL PRIMARY KEY,
    DELIVERY_PARTNER BIGINT NOT NULL
    
);
CREATE TABLE ORDERDETAILS(
	ORDER_ID BIGINT NOT NULL,
    AMOUNT INT NOT NULL,
    CUSTOMERID BIGINT NOT NULL,
    STATUS ENUM('DELIVERED' , 'PENDING' , 'DISPATCHED' , 'CANCELLED'),
    SHIPPER_ID BIGINT ,
    PRIMARY KEY(ORDER_ID , CUSTOMERID)
    
);
CREATE TABLE TRANSACTIONS (
	USER_ID BIGINT NOT NULL ,
	AMOUNT INT NOT NULL,
    ORDER_ID BIGINT NOT NULL,
    PAYMENT_METHOD VARCHAR(10) NOT NULL,
    TRANSACTION_AT DATE NOT NULL,
    PRIMARY KEY(USER_ID , ORDER_ID)
);

CREATE TABLE ORDERS_ITEMS(
	ORDER_ID BIGINT NOT NULL,
    PRODUCT_ID BIGINT NOT NULL , 
    QUANTITY INT DEFAULT 0,
	PRIMARY KEY(ORDER_ID ,PRODUCT_ID)
);

ALTER TABLE ORDERDETAILS ADD CONSTRAINT FK_ORDER_CUSTOMER FOREIGN KEY(CUSTOMERID) REFERENCES CUSTOMERS(ID);
ALTER TABLE PRODUCT ADD CONSTRAINT FK_PRODUCT_CATEGORY FOREIGN KEY(CATEGORYID) REFERENCES CATEGORY(CATEGORY_ID);
ALTER TABLE PRODUCT ADD CONSTRAINT FK_PRODUCT_supplier FOREIGN KEY(SUPPLIER_ID) REFERENCES SUPPLIERS(SUPPLIER_ID);
ALTER TABLE ORDERDETAILS ADD CONSTRAINT FK_ORDERDETAILS_STATUS FOREIGN KEY (ORDER_ID) REFERENCES ORDERSTATUS(ORDER_ID);
ALTER TABLE ORDERDETAILS ADD CONSTRAINT FK_ORDERDETAILS_SHIPPERS FOREIGN KEY (SHIPPER_ID) REFERENCES SHIPPERS(SHIPPER_ID);
ALTER TABLE TRANSACTIONS ADD CONSTRAINT FK_TRANSACTIONS_CUSTOMER FOREIGN KEY(USER_ID) REFERENCES CUSTOMERS(ID);
ALTER TABLE TRANSACTIONS ADD CONSTRAINT FK_TRANSACTIONS_ORDERS FOREIGN KEY(ORDER_ID) REFERENCES ORDERSTATUS(ORDER_ID);
 
-- TESTS 


INSERT INTO CUSTOMERS VALUES(113,'HAMZA' , 'USMANI', 'TALHAusmani021@gmail.com' , 'password' , 'saima jinnah avenue , malir , karachi' , '03322411710' , '2015-11-11');
INSERT INTO ADMINISTRATOR VALUES('HAMZAUSMANI302@gmail.com' , 'hello123' , '2020-10-13' , 'MANAGER' );
INSERT INTO ORDERSTATUS VALUES(111, 112);
INSERT INTO ORDERSTATUS VALUES(112 ,113);
INSERT INTO ORDERDETAILS VALUES(112,2000,113 , 'PENDING' , NULL);
UPDATE ORDERDETAILS SET STATUS='CANCELLEd' WHERE ORDER_ID = 112;
SELECT * FROM ORDERDETAILS;
-- DISCARDING CART FOR NOW
